<?xml version="1.0" encoding="UTF-8"?>
<services xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://moqui.org/xsd/service-definition-3.xsd">

    <service verb="store" noun="MoquiTraining">
        <in-parameters>
            <parameter name="trainingID" required="true"/>
            <parameter name="trainingName" />
            <parameter name="trainingDate" />
            <parameter name="trainingPrice"/>
            <parameter name="trainingDuration"/>
        </in-parameters>
        <out-parameters>
            <parameter name="trainingID"/>
        </out-parameters>
        <actions>
            <script>

    // Fetch existing record by trainingID or trainingName

    def trainingRecord = ec.entity.find("moqui.training.MoquiTraining")
    trainingRecord.condition("trainingID", context.trainingID)
    trainingRecord = trainingRecord.one()

    if (trainingRecord) {
        // Update existing record
        trainingRecord.set("trainingName", context.trainingName)
        trainingRecord.set("trainingDate", context.trainingDate)
        trainingRecord.set("trainingPrice", context.trainingPrice)
        trainingRecord.set("trainingDuration", context.trainingDuration)
        trainingRecord.update()
        context.trainingID = trainingRecord.trainingID
    } else {
        // Use the provided trainingID or generate a new one
        def newTrainingID = context.trainingID ?: ec.entity.sequencedIdPrimary("moqui.training.MoquiTraining", null, null)
        ec.entity.makeValue("moqui.training.MoquiTraining")
            .set("trainingID", newTrainingID)
            .set("trainingName", context.trainingName)
            .set("trainingDate", context.trainingDate)
            .set("trainingPrice", context.trainingPrice)
            .set("trainingDuration", trainingDuration)
            .create()
        context.trainingID = newTrainingID
    }

            </script>
        </actions>
    </service>
</services>